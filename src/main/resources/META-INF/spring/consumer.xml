<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- 读取配置文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/dubbo.properties" />
	
    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->  
    <dubbo:application name="${dubbo.application.name}" />         

	<!-- 使用本地伪集群注册中心暴露发现服务地址 -->  
    <dubbo:registry  protocol="${dubbo.monitor.protocol}"  address="${dubbo.registry.address}" />   
   	<!-- 生成远程服务代理，可以和本地bean一样使用demoService -->  
   
   
  	<!-- 地区接口 -->
    <dubbo:reference id="addressService" interface="com.ysc.bdp.address.service.outward.IAddressService" >
    	<dubbo:method name="getAllProvinceList" cache="lru"/>
    </dubbo:reference>  
    
    <dubbo:reference id="prodSvc" version="1.0.5" interface="com.demo.inter.ProductService" />
    	
    
    
<!--      <bean class="com.bdp.BdpConsumer" id="bdpConsumer" init-method="start">
		<property name="addressService" ref="addressService" />
	</bean> -->
	
 	<bean class="com.demo.consumer.ProductConsumer" init-method="start">
		<property name="productSvc" ref="prodSvc" />
	</bean>
</beans>